{"version":3,"sources":["SketchFieldMobile.js","PersistentDrawerLeft.js","login.js","FloatingActionButtonZoom.js","App.js","serviceWorker.js","index.js"],"names":["SketchFieldMobile","sketch","React","createRef","prevProps","prevState","snapshot","axios","post","foo","this","current","toDataURL","react_default","a","createElement","Fragment","props","add","lib","ref","style","position","left","top","transform","className","width","height","tool","Tools","Pencil","lineColor","attributes","lineWidth","backgroundColor","imageFormat","Component","PersistentDrawerLeft","state","open","handleDrawerOpen","_this","setState","handleDrawerClose","_this2","_this$props","classes","theme","root","CssBaseline_default","AppBar_default","classNames","appBar","Object","defineProperty","appBarShift","Toolbar_default","disableGutters","IconButton_default","color","aria-label","onClick","menuButton","hide","Menu_default","Typography_default","variant","noWrap","Drawer_default","drawer","anchor","paper","drawerPaper","drawerHeader","direction","ChevronLeft_default","ChevronRight_default","Divider_default","List_default","ListItem_default","key","ListItemIcon_default","ColorLens_default","ListItemText_default","primary","GridList_default","gridList","cols","GridListTile_default","Button_default","button","right","changeColor","SvgIcon_default","iconHover","xmlns","viewBox","fill","d","marginTop","alignItems","eraser","version","MoveToInbox_default","withStyles","display","transition","transitions","create","easing","sharp","duration","leavingScreen","concat","marginLeft","easeOut","enteringScreen","marginRight","flexShrink","objectSpread","padding","mixins","toolbar","justifyContent","content","flexGrow","spacing","unit","contentShift","&:hover","blue","withTheme","Login","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showModal","loggedIn","loading","error","initialTab","recoverPasswordSuccess","console","log","document","querySelector","value","email","password","onLoginSuccess","login","method","response","closeModal","openModal","isLoading","react_modal_login_default","visible","onCloseModal","bind","tabs","afterChange","afterTabsChange","startLoading","finishLoading","form","onLogin","onRegister","onRecoverPassword","recoverPasswordSuccessLabel","label","recoverPasswordAnchor","loginBtn","registerBtn","recoverPasswordBtn","loginInputs","containerClass","type","inputClass","id","name","placeholder","registerInputs","recoverPasswordInputs","separator","providers","FloatingActionButtonZoom","handleChange","event","handleChangeIndex","index","transitionDuration","enter","exit","fabs","fab","icon","Add_default","Edit_default","fabGreen","KeyboardArrowUp_default","map","Zoom_default","in","timeout","transitionDelay","unmountOnExit","bottom","palette","common","white","green","App","linecolor","handle_this","newnumb","componentDidMount","body","addEventListener","login_Login","react_body_backgroundcolor_default","Grid_default","container","src_PersistentDrawerLeft","src_SketchFieldMobile","src_FloatingActionButtonZoom","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c0522b7d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {SketchField, Tools} from 'react-sketch';\nimport axios from 'axios';\n\nclass SketchFieldMobile extends Component {\n    sketch = React.createRef();\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n        axios.post('https://fcd13b46.ngrok.io/updateUI', {\n            foo: this.sketch.current.toDataURL()\n        });\n\n        // console.log(this.sketch.current.toDataURL());\n      }\n\n    render() {\n\n   \n       return (\n           <>\n           <text>{this.props.add}</text>\n           <SketchField \n           ref={this.sketch}\n           style={{\n          position: 'absolute', left: '50%', top: '50%',\n          transform: 'translate(-50%, -50%)'\n          }} \n                        className=\"Field\"\n                        width='375px' \n                        height='667px' \n                        tool={Tools.Pencil} \n                        lineColor={this.props.attributes}\n                        lineWidth={this.props.lineWidth}\n                        backgroundColor='255'\n                        imageFormat='jpeg'\n                        />\n                        </>\n                        \n       )\n    }\n  }\n\n  export default SketchFieldMobile","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport ColorLens from '@material-ui/icons/ColorLens';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport blue from '@material-ui/core/colors/blue';\nimport Button from '@material-ui/core/Button';\n\nconst drawerWidth = 280;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  iconHover: {\n    // margin: theme.spacing.unit * 2,\n    '&:hover': {\n      color: blue[800],\n    },\n  },\n});\n\nclass PersistentDrawerLeft extends React.Component {\n  state = {\n    open: false,\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n    const { open } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          className={classNames(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n        >\n          <Toolbar disableGutters={!open}>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerOpen}\n              className={classNames(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              SketchyAI\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={this.handleDrawerClose}>\n              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            <ListItem key='Colors'>\n              <ListItemIcon><ColorLens/></ListItemIcon>\n              <ListItemText primary='Colors'/>\n            </ListItem>\n            <GridList className={classes.gridList}  style={{\n          position: 'relative', left: '10%'\n          }} cols={3.5}>\n      \n          <GridListTile>\n            <Button className={classes.button} style={{position:'relative', right:'50%'}} onClick={() => this.props.changeColor('red')}>\n              <SvgIcon className={classes.iconHover} color=\"secondary\" style={{position:'relative', left:'45%'}} >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" viewBox=\"0 0 25 25\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2z\"/></svg>\n              </SvgIcon>\n              <ListItemText primary='Red' style={{position:'relative', right: '6%', marginTop: '47%'}}/>\n            </Button>\n          </GridListTile>\n\n          <GridListTile>\n          <Button className={classes.button} style={{position:'relative', right:'50%'}} onClick={() => this.props.changeColor('blue')}>\n            <SvgIcon className={classes.iconHover} color=\"primary\" style={{position:'relative', left:'45%', alignItems:'center'}} >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" viewBox=\"0 0 25 25\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2z\"/></svg>\n            </SvgIcon>\n            <ListItemText primary='Blue' style={{position:'relative', right: '6%', marginTop: '45%'}}/>\n          </Button>\n          </GridListTile>\n\n          <GridListTile>\n          <Button className={classes.button} style={{position:'relative', right:'50%', alignItems:'center'}} onClick={() => this.props.changeColor('black')}>\n            <SvgIcon className={classes.iconHover} color=\"disabled\" style={{position:'relative', left:'45%'}}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" viewBox=\"0 0 25 25\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2z\"/></svg>\n            </SvgIcon>\n            <ListItemText primary='Black' style={{position:'relative', right: '6%', marginTop: '40%'}}/>\n          </Button>\n          </GridListTile>\n\n      </GridList>\n          </List>\n          <Divider />\n          <List>\n    \n            <ListItem button key='Eraser' onClick={() => this.props.eraser()}>\n                <ListItemIcon> \n                  <SvgIcon>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"  width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n   <path fill=\"#000000\" d=\"M16.24,3.56L21.19,8.5C21.97,9.29 21.97,10.55 21.19,11.34L12,20.53C10.44,22.09 7.91,22.09 6.34,20.53L2.81,17C2.03,16.21 2.03,14.95 2.81,14.16L13.41,3.56C14.2,2.78 15.46,2.78 16.24,3.56M4.22,15.58L7.76,19.11C8.54,19.9 9.8,19.9 10.59,19.11L14.12,15.58L9.17,10.63L4.22,15.58Z\" />\n</svg>\n</SvgIcon>\n</ListItemIcon>\n                <ListItemText primary='Eraser' />\n              </ListItem>\n\n              <ListItem button key='Download Code'>\n                <ListItemIcon> <InboxIcon /></ListItemIcon>\n                <ListItemText primary='Download Code' />\n              </ListItem>\n          </List>\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nPersistentDrawerLeft.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(PersistentDrawerLeft);","import React from 'react';\nimport ReactModalLogin from 'react-modal-login';\n\n// import {facebookConfig, googleConfig} from \"social-config\";\n\nexport default class Login extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showModal: false,\n      loggedIn: null,\n      loading: false,\n      error: null,\n      initialTab: null,\n      recoverPasswordSuccess: null,\n    };\n\n  }\n\n\n  onLogin() {\n    console.log('__onLogin__');\n    console.log('email: ' + document.querySelector('#email').value);\n    console.log('password: ' + document.querySelector('#password').value);\n\n    const email = document.querySelector('#email').value;\n    const password = document.querySelector('#password').value;\n\n    if (!email || !password) {\n      this.setState({\n        error: true\n      })\n    } else {\n      this.onLoginSuccess('form');\n    }\n  }\n\n  onRegister() {\n    console.log('__onRegister__');\n    console.log('login: ' + document.querySelector('#login').value);\n    console.log('email: ' + document.querySelector('#email').value);\n    console.log('password: ' + document.querySelector('#password').value);\n\n    const login = document.querySelector('#login').value;\n    const email = document.querySelector('#email').value;\n    const password = document.querySelector('#password').value;\n\n    if (!login || !email || !password) {\n      this.setState({\n        error: true\n      })\n    } else {\n      this.onLoginSuccess('form');\n    }\n  }\n\n  onRecoverPassword() {\n    console.log('__onFotgottenPassword__');\n    console.log('email: ' + document.querySelector('#email').value);\n\n    const email = document.querySelector('#email').value;\n\n\n    if (!email) {\n      this.setState({\n        error: true,\n        recoverPasswordSuccess: false\n      })\n    } else {\n      this.setState({\n        error: null,\n        recoverPasswordSuccess: true\n      });\n    }\n  }\n\n  openModal(initialTab) {\n    this.setState({\n      initialTab: initialTab\n    }, () => {\n      this.setState({\n        showModal: true,\n      })\n    });\n  }\n\n  onLoginSuccess(method, response) {\n\n    this.closeModal();\n    this.setState({\n      loggedIn: method,\n      loading: false\n    })\n  }\n\n  onLoginFail(method, response) {\n\n    this.setState({\n      loading: false,\n      error: response\n    })\n  }\n\n  startLoading() {\n    this.setState({\n      loading: true\n    })\n  }\n\n  finishLoading() {\n    this.setState({\n      loading: false\n    })\n  }\n\n  afterTabsChange() {\n    this.setState({\n      error: null,\n      recoverPasswordSuccess: false,\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      showModal: false,\n      error: null\n    });\n  }\n\n  componentDidMount() {\n      this.openModal('login')\n  }\n\n  render() {\n\n    const loggedIn = this.state.loggedIn\n      ? <div>\n          <p>You are signed in with: {this.state.loggedIn}</p>\n        </div>\n      : <div>\n          <p>You are signed out</p>\n      </div>;\n\n    const isLoading = this.state.loading;\n\n    return (\n      <div>\n\n        <ReactModalLogin\n          visible={this.state.showModal}\n          onCloseModal={this.closeModal.bind(this)}\n          loading={isLoading}\n          initialTab={this.state.initialTab}\n          error={this.state.error}\n          tabs={{\n            afterChange: this.afterTabsChange.bind(this)\n          }}\n          startLoading={this.startLoading.bind(this)}\n          finishLoading={this.finishLoading.bind(this)}\n          form={{\n            onLogin: this.onLogin.bind(this),\n            onRegister: this.onRegister.bind(this),\n            onRecoverPassword: this.onRecoverPassword.bind(this),\n\n            recoverPasswordSuccessLabel: this.state.recoverPasswordSuccess\n              ? {\n                  label: \"New password has been sent to your mailbox!\"\n                }\n              : null,\n            recoverPasswordAnchor: {\n              label: \"Forgot your password?\"\n            },\n            loginBtn: {\n              label: \"Sign in\"\n            },\n            registerBtn: {\n              label: \"Sign up\"\n            },\n            recoverPasswordBtn: {\n              label: \"Send new password\"\n            },\n            loginInputs: [\n              {\n                containerClass: 'RML-form-group',\n                label: 'Email',\n                type: 'email',\n                inputClass: 'RML-form-control',\n                id: 'email',\n                name: 'email',\n                placeholder: 'Email',\n              },\n              {\n                containerClass: 'RML-form-group',\n                label: 'Password',\n                type: 'password',\n                inputClass: 'RML-form-control',\n                id: 'password',\n                name: 'password',\n                placeholder: 'Password',\n              }\n            ],\n            registerInputs: [\n              {\n                containerClass: 'RML-form-group',\n                label: 'Nickname',\n                type: 'text',\n                inputClass: 'RML-form-control',\n                id: 'login',\n                name: 'login',\n                placeholder: 'Nickname',\n              },\n              {\n                containerClass: 'RML-form-group',\n                label: 'Email',\n                type: 'email',\n                inputClass: 'RML-form-control',\n                id: 'email',\n                name: 'email',\n                placeholder: 'Email',\n              },\n              {\n                containerClass: 'RML-form-group',\n                label: 'Password',\n                type: 'password',\n                inputClass: 'RML-form-control',\n                id: 'password',\n                name: 'password',\n                placeholder: 'Password',\n              }\n            ],\n            recoverPasswordInputs: [\n              {\n                containerClass: 'RML-form-group',\n                label: 'Email',\n                type: 'email',\n                inputClass: 'RML-form-control',\n                id: 'email',\n                name: 'email',\n                placeholder: 'Email',\n              },\n            ],\n          }}\n          separator={{\n            label: \"or\"\n          }}\n          providers={{\n\n          }}\n        />\n        {loggedIn}\n      </div>\n    )\n  }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Zoom from '@material-ui/core/Zoom';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport UpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport green from '@material-ui/core/colors/green';\n\n\nconst styles = theme => ({\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing.unit * 2,\n    right: theme.spacing.unit * 2,\n  },\n  fabGreen: {\n    color: theme.palette.common.white,\n    backgroundColor: green[500],\n  },\n});\n\nclass FloatingActionButtonZoom extends React.Component {\n  state = {\n    value: 0,\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  handleChangeIndex = index => {\n    this.setState({ value: index });\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n    const transitionDuration = {\n      enter: theme.transitions.duration.enteringScreen,\n      exit: theme.transitions.duration.leavingScreen,\n    };\n\n    const fabs = [\n      {\n        color: 'primary',\n        className: classes.fab,\n        icon: <AddIcon />,\n      },\n      {\n        color: 'secondary',\n        className: classes.fab,\n        icon: <EditIcon />,\n      },\n      {\n        color: 'inherit',\n        className: classNames(classes.fab, classes.fabGreen),\n        icon: <UpIcon />,\n      },\n    ];\n\n    return (\n      <div>\n        {fabs.map((fab, index) => (\n          <Zoom\n            key={fab.color}\n            in={this.state.value === index}\n            timeout={transitionDuration}\n            style={{\n              transitionDelay: `${this.state.value === index ? transitionDuration.exit : 0}ms`,\n            }}\n            unmountOnExit\n          >\n            <Button variant=\"fab\" className={fab.className} color={fab.color}>\n              {fab.icon}\n            </Button>\n          </Zoom>\n        ))}\n      </div>\n    );\n  }\n}\n\nFloatingActionButtonZoom.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(FloatingActionButtonZoom);","import React, { Component} from 'react';\n// import {SketchField, Tools} from 'react-sketch';\nimport SketchFieldMobile from './SketchFieldMobile';\n// import AppBarEdit from './AppBar';\nimport Grid from '@material-ui/core/Grid';\nimport PersistentDrawerLeft from './PersistentDrawerLeft'\n// import Paper from '@material-ui/core/Paper';\nimport BodyBackgroundColor from 'react-body-backgroundcolor'\nimport Login from './login'\nimport FloatingActionButtonZoom from './FloatingActionButtonZoom'\n\n\n\nclass App extends Component {\n\n  state = {\n    linecolor: 'blue',\n    lineWidth: 4,\n    add: 0\n  }\n\n  changeColor = (color) => {\n    this.setState({\n      linecolor : color,\n      lineWidth: 4\n    })\n  }\n\n  eraser = () => {\n    this.setState({\n      linecolor: 'white',\n      lineWidth: 20\n    })\n  }\n\n  handle_this = () => {\n    let newnumb = 0;\n    if(this.state.add === 0) {\n      newnumb = 1;\n    } else {\n      newnumb = 0;\n    }\n    this.setState({\n      linecolor: this.state.linecolor,\n      lineWidth: this.state.lineWidth,\n      add: newnumb\n    })\n  }\n\n  componentDidMount = function () {\n    document.body.addEventListener('click', this.handle_this);\n}\n\n\n  render() {\n    return (\n    \n      <div className=\"App\">\n        <Login />\n        <BodyBackgroundColor backgroundColor =  '#343D46'>\n        <Grid container spacing={24}>\n         \n          <PersistentDrawerLeft changeColor={this.changeColor} eraser={this.eraser} />\n          \n          <SketchFieldMobile attributes={this.state.linecolor} lineWidth={this.state.lineWidth} add={this.state.add}/>\n  \n        </Grid>\n        </BodyBackgroundColor>\n        <FloatingActionButtonZoom></FloatingActionButtonZoom>\n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}